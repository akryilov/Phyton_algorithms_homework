"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать где какая сложность.
Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

#########

x = [10, 11, 12, 3, 1, 7, 9, 16]

def min_search_1(sequence):
    """
    Реализация первого алгоритма
    Сложность: квадратичная O(n^2)
    """
    min_value = sequence[0]
    for i in sequence:          # Сложность линейная O(n)
        sequence.reverse()      # Сложность линейная O(n)
        if i < min_value:
            min_value = i
    return min_value


#########

def min_search_2(sequence):
    """
    Реализация второго алгоритма
    Сложность: линейная O(n)
    """
    min_value = sequence[0]
    for i in sequence:           # Сложность линейная O(n)
        if i < min_value:
            min_value = i
    return min_value


print(min_search_1(x))

print(min_search_2(x))

